name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['1.22', '1.23']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Get dependencies
        run: |
          go mod download
          go mod verify
      
      - name: Build
        run: go build -v ./...
      
      - name: Test
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      
      - name: Run vet
        run: go vet ./...
      
      - name: Build binary
        run: go build -o ccusage-go cmd/ccusage/main.go
      
      - name: Test binary execution
        run: ./ccusage-go --help

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m --issues-exit-code=0
          skip-pkg-cache: true
          skip-build-cache: true